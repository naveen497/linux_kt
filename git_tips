 ###########################################################
### Adding an existing project to GitHub using the command line 
Initialize the local directory as a Git repository.
    $ git init
Add the files in your new local repository. This stages them for the first commit.
    $ git add .
# Adds the files in the local repository and stages them for commit. To unstage a file, use 'git reset HEAD YOUR-FILE'.
Commit the files that you've staged in your local repository.
    $ git commit -m "First commit"
# Commits the tracked changes and prepares them to be pushed to a remote repository. To remove this commit and modify the file, use 'git reset --soft HEAD~1' and commit and add the file again.
At the top of your GitHub repository's Quick Setup page, click  to copy the remote repository URL.
In Terminal, add the URL for the remote repository where your local repository will be pushed.
   $git remote add origin remote repository URL
   # Sets the new remote
   $git remote -v
   # Verifies the new remote URL
Push the changes in your local repository to GitHub.
   git push -u origin master
   # Pushes the changes in your local repository up to the remote repository you specified as the origin

# updating a forked repo
# Add the remote, call it "upstream":

git remote add upstream https://github.com/whoever/whatever.git

# Fetch all the branches of that remote into remote-tracking branches,
# such as upstream/master:

git fetch upstream

# Make sure that you're on your master branch:

git checkout master

# Rewrite your master branch so that any commits of yours that
# aren't already in upstream/master are replayed on top of that
# other branch:

git rebase upstream/master

